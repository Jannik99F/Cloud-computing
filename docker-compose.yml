services:
  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shop
    ports:
      - "5432:5432"
    networks:
      - webshop-network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - webshop-network

  webshop:
    build: backend
    container_name: webshop-backend
    working_dir: /backend/app
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/backend/app
    environment:  # for some reason I need to add it here again. Normally, this should work out of the box via the
                  # python import of the .env but in the container for some reason it doesn't. But it should be finde
                  # because this keeps the credentials locally in the .env.
      DB_URL_PROD: ${DB_URL_PROD}
      DB_URL_LOCAL: ${DB_URL_LOCAL}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    depends_on:
      - db
      - redis
    networks:
      - webshop-network

  celery-worker:
    build: backend
    container_name: celery-worker
    working_dir: /backend/app
    command: [ "celery", "-A", "tasks.celery_app", "worker", "--loglevel=info" ]
    environment:
      PYTHONPATH: /backend/app
      DB_URL_PROD: ${DB_URL_PROD}
      DB_URL_LOCAL: ${DB_URL_LOCAL}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - db
      - redis
      - webshop
    networks:
      - webshop-network

  frontend:
    build:
      context: frontend/vue-project  # Path to frontend Dockerfile
      dockerfile: Dockerfile
    container_name: webshop-frontend
    ports:
      - "5173:5173"  # Vite default port
    volumes:
      - ./frontend/vue-project:/app  # Mount source code
      - /app/node_modules  # Keep container dependencies isolated
    depends_on:
      - webshop  # Start after backend
    networks:
      - webshop-network

networks:
  webshop-network:
    driver: bridge
